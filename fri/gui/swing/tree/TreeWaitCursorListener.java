package fri.gui.swing.tree;import java.awt.Component;import javax.swing.JTree;import javax.swing.event.TreeExpansionEvent;import javax.swing.event.TreeExpansionListener;import javax.swing.event.TreeWillExpandListener;import javax.swing.tree.ExpandVetoException;import fri.gui.CursorUtil;public class TreeWaitCursorListener implements	TreeExpansionListener,	TreeWillExpandListener{	private JTree tree;	private final Component cursorComponent;			public TreeWaitCursorListener(JTree tree)	{		this(tree, tree);	}		public TreeWaitCursorListener(JTree tree, Component cursorComponent)	{		this.tree = tree;		this.cursorComponent = cursorComponent;		tree.addTreeExpansionListener(this);		tree.addTreeWillExpandListener(this);	}			/** implements Closeable to remove listeners */	public boolean close()	{		tree.removeTreeExpansionListener(this);		tree.removeTreeWillExpandListener(this);		return true;	// close is OK	}			public void treeWillExpand(TreeExpansionEvent e)		throws ExpandVetoException	{		//System.err.println("tree expanding ...");		CursorUtil.setWaitCursor(cursorComponent);	}	public void treeWillCollapse(TreeExpansionEvent e)		throws ExpandVetoException	{		CursorUtil.setWaitCursor(cursorComponent);	}				// interface TreeExpansionListener	public void treeExpanded(TreeExpansionEvent e)	{		//System.err.println("... tree has expanded");		CursorUtil.resetWaitCursor(cursorComponent);	}	public void treeCollapsed(TreeExpansionEvent e)	{		CursorUtil.resetWaitCursor(cursorComponent);	}			protected void finalize()		throws Throwable	{		close();	}	}